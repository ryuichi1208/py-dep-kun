version: 2.1

orbs:
  codecov: 'codecov/codecov@1.0.5'
  microscanner: 'aquasecurity/microscanner@0.1.6'

executors:
  py-executor:
    # working_directory: /tmp
    docker:
      - image: circleci/python:3.7.3
  py-builder:
    machine:
      enabled: true
      image: circleci/classic:201808-01
      docker_layer_caching: true

commands:
  print_info:
    description: "Display command information"
    steps:
      - run:
          name: Print Info
          when: always
          command: |
            ls -lRt && pwd && uname -a && git tag --list && python -V && pip -V && id
  container_build:
    description: "Docker image build"
    steps:
      - run:
          name: Docker Image Build
          when: always
          command: |
            docker version
            docker image build .
            docker image ls

jobs:
  lint_and_test:
    executor:
      name: py-executor
    steps:
      - checkout
      - setup_remote_docker:
          version: 18.09.3
      - restore_cache:
          keys:
            - pip-package-cache-v1-{{ .Branch }}-{{ checksum "requirements.txt" }}
            # - pip-package-cache-v1-{{ .Branch }}-
            # - pip-package-cache-v1-
      - print_info
      - run:
          name: Init enviroment
          when: always
          command: |
            sudo pip install -U pip
            sudo pip install -r requirements.txt
      - run:
          name: Run black
          when: always
          command: |
            find . -type f -name "*.py" | grep -v "py-dep-kun" | xargs -L 1 black --check && echo 0
            find . -type f -name "*.py" | grep -v "py-dep-kun" | xargs -L 1 black --diff && echo 0
            find . -type f -name "*.py" | grep -v "py-dep-kun" | xargs -L 1 black ; echo $?
      - run:
          name: Run formerly
          when: always
          command: |
            find . -type f -name "*.py" | grep -v "py-dep-kun" | xargs -L 1 pycodestyle ; echo $? && echo 0
      - run:
          name: Run type check
          when: always
          command: |
            mypy -V
            mypy -v --no-warn-no-return run.py
      - run:
          name: Run tests
          when: always
          command: |
            pytest --version
            pytest -v --show-capture=no --cache-clear --setup-show --durations=0
            pytest -v --show-capture=no --cache-clear --setup-show --randomly-seed=last
      - run:
          name: Output coverage report
          when: always
          command: |
            pytest --cov .
            pytest --cov . --cov-report html
      - store_test_results:
          path: htmlcov
      - store_artifacts:
          path: htmlcov
      - run:
          name: Upload covrage
          when: always
          command: |
            codecov
      - save_cache:
          paths:
            - ./script/helbin
          key: pip-package-cache-v1-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - container_build

  scan_image:
    executor: microscanner/default
    steps:
      - checkout
      - print_info
      - run:
          name: Scan Image
          command: |
            ./script/rewrite_dockerfile.sh Dockerfile
            docker image build -t py-dep-kun:1.0 .
            docker image ls
            docker run --entrypoint /home/api/microscanner -it py-dep-kun:1.0 ${MICROSCANNER_TOKEN}
            docker run --entrypoint /home/api/microscanner -it py-dep-kun:1.0 ${MICROSCANNER_TOKEN} --html > index.html
            ls -lRt && pwd
      - store_artifacts:
          path: index.hmtl
      - store_test_results:
          path: index.hmtl

  build_and_deploy:
    executor:
      name: py-builder
    steps:
      - checkout
      - run:
          name: Print info
          when: always
          command: |
            docker version && docker-compose version
      - run:
          name: Build container
          when: always
          command: |
            docker image build -t py-dep-kun .
            docker image ls
      - run:
          name: Add container tag
          when: always
          command: |
            docker login -u ${DOCKERHUB_USER} -p ${DOCKERHUB_PASS}
            docker tag py-dep-kun ${DOCKERHUB_USER}/${DOCKERHUB_REPOS}:${CIRCLE_TAG}
            docker image ls
            docker image push ${DOCKERHUB_USER}/${DOCKERHUB_REPOS}:${CIRCLE_TAG}

workflows:
  version: 2
  defaultWorkflow:
    jobs:
      - lint_and_test:
          filters:
            branches:
              only:
                - master
                - beta
                - alpha
            tags:
              only: /v.*/
      # Flow to be executed only when pushing with tag
      - build_and_deploy:
          requires:
            - lint_and_test
          filters:
            tags:
              only: /v.*/
            branches:
              ignore: /.*/
      - scan_image:
          filters:
            branches:
              only:
                - master
                - beta
                - alpha
            tags:
              only: /v.*/
          context: MicroScdocker run --entrypoint /home/api/microscanner -it py-dep-kun:1.0 ${MICROSCANNER_TOKEN} --html > index.htmlanner
